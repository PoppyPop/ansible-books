---
      
- hosts: netbox
  become: yes
  roles:
    - role: nginxinc.nginx
      vars:
        nginx_http_template_enable: true
        nginx_http_template:
          default:
            servers:
              server1:
                listen:
                  listen_localhost:
                    port: 80
                    opts:
                      - default_server
                server_name: "{{ ansible_fqdn }}"
                error_page: /usr/share/nginx/html
                autoindex: false
                reverse_proxy:
                  locations:
                    netbox:
                      location: /
                      proxy_pass: http://netbox_servers
                      proxy_set_header:
                        header_host:
                          name: X-Forwarded-Host
                          value: $server_name
                        header_ip:
                          name: X-Real-IP
                          value: $remote_addr
                        header_proto:
                          name: X-Forwarded-Proto
                          value: $scheme                          
            upstreams:
              netbox_servers:
                name: netbox_servers
                lb_method: least_conn
                zone_name: frontend
                zone_size: 64k
                sticky_cookie: false
                servers:
                  netbox_server_1:
                    address: 127.0.0.1
                    port: 8080
                    weight: 1
                    health_check: max_fails=3 fail_timeout=5s
    - role: geerlingguy.firewall
      vars:
        - firewall_allowed_tcp_ports:
          - "80"
          - "443"
          - "22"
    - geerlingguy.postgresql
    - davidwittman.redis
    - lae.netbox
  vars:
    netbox_stable: true
    netbox_socket: "127.0.0.1:8080"
    netbox_protocol: http
    netbox_superuser_password: "{{ netbox_password }}"
    netbox_config:
      SECRET_KEY: "{{ netbox_secret_key }}"
      ALLOWED_HOSTS:
        - "127.0.0.1"
        - "{{ ansible_fqdn }}"
        - "{{ ansible_default_ipv4.address }}"
      MEDIA_ROOT: "{{ netbox_shared_path }}/media"
      REPORTS_ROOT: "{{ netbox_shared_path }}/reports"
      SCRIPTS_ROOT: "{{ netbox_shared_path }}/scripts"
    netbox_database_socket: "{{ postgresql_unix_socket_directories[0] }}"
    netbox_database_user: netbox
    netbox_database_password: "{{ pgsql_password }}"
    netbox_keep_uwsgi_updated: true
    netbox_ldap_enabled: true
    netbox_load_initial_data: true
    netbox_webhooks_enabled: true
    netbox_ldap_server_uri: "ldaps://ipa.mo-ot.fr"
    netbox_ldap_base_dn: "dc=mo-ot,dc=fr"
    netbox_ldap_bind_dn: "uid=netbox,cn=sysaccounts,cn=etc,{{ netbox_ldap_base_dn }}"
    postgresql_users:
      - name: "{{ netbox_database_user }}"
        password: "{{ pgsql_password }}"
        role_attr_flags: CREATEDB,NOSUPERUSER
    redis_bind: 127.0.0.1
  pre_tasks:
    - name: Enable Subscription Manager Repos
      rhsm_repository:
        name: "{{ item }}"
      loop:
        - rhel-*-optional-rpms
        - rhel-*-extras-rpms
      when: "ansible_distribution == 'Red Hat Enterprise Linux'"
    - block:
      - name: Set PostgreSQL facts to use PG10 for RedHat distributions
        set_fact:
          postgresql_version: 10
          postgresql_packages:
            - postgresql10
            - postgresql10-server
            - postgresql10-contrib
            - postgresql10-libs
          postgresql_data_dir: /var/lib/pgsql/10/data
          postgresql_bin_path: /usr/pgsql-10/bin
          postgresql_config_path: /var/lib/pgsql/10/data
          postgresql_daemon: postgresql-10
      - name: Install the EPEL yum repository
        yum:
          name: epel-release
      - name: Install the PostgreSQL yum repository
        yum:
          name: "https://download.postgresql.org/pub/repos/yum/reporpms/EL-{{ ansible_distribution_major_version }}-x86_64/pgdg-redhat-repo-latest.noarch.rpm"
      when: "ansible_os_family == 'RedHat'"
    - block:
      - name: Install python-ldap
        package:
          name: python-ldap
          state: latest
      - name: Add netbox system user to LDAP
        ldap_entry:
          server_uri: "{{ netbox_ldap_server_uri }}"
          bind_dn: "cn=Directory Manager"
          bind_pw: "{{ ipa_dm_password }}"
          dn: uid=netbox,cn=sysaccounts,cn=etc,{{ netbox_ldap_base_dn }}
          objectClass:
            - simpleSecurityObject
            - account
          attributes:
            description: Netbox LDAP system account
            userPassword: "{{ netbox_ldap_bind_pass }}" 
            passwordExpirationTime: 20380119031407Z
            nsIdleTimeout: 0  
    - name: Tune SeLinux
      shell: "setsebool -P httpd_can_network_relay 1" 
 
      
# You can use this playbook as-is to setup a full NetBox server, just change
# the FQDN below. It'll accept HTTP requests on specified FQDN.
#
# ansible-playbook -i netbox.example.com, playbook_single_host_deploy.yml
#
# Note that for RH systems, PostgreSQL is installed from upstream.

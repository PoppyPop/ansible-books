---

- hosts: all
  become: true
  vars_files:
    - secrets.yaml
  tasks:
    - name: Run the equivalent of "apt-get update" as a separate step
      apt:
        update_cache: yes
      #when: ansible_facts['distribution'] != 'Fedora'
      when: 0 > 1
    - name: Install sudo
      ansible.builtin.package:
        name: sudo
        state: present
    - name: Install nano
      ansible.builtin.package:
        name: nano
        state: present
    - name: Install screen
      ansible.builtin.package:
        name: screen
        state: present
    - name: Install haveged
      ansible.builtin.package:
        name: haveged
        state: present
    - name: Make sure we have a 'wheel' group
      group:
        name: wheel
        state: present
    - name: Add the user 'ansible'
      user:
        name: ansible
        groups: wheel
        append: yes
        shell: /bin/bash
    - name: Set authorized key taken from file
      authorized_key:
        user: ansible
        state: present
        key: "{{ lookup('file', '~/.ssh/ansiblekey.pub') }}"

    - name: Allow 'wheel' group to have passwordless sudo
      lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: '^%wheel'
        line: '%wheel ALL=(ALL) NOPASSWD: ALL'
        validate: 'visudo -cf %s'
          
    - name: Ensure hostname set
      hostname: name={{ inventory_hostname }}
    
    - name: Ensure hostname is in /etc/hosts
      lineinfile:
        dest=/etc/hosts
        regexp="^{{ ansible_default_ipv4.address }}.+$"
        line="{{ ansible_default_ipv4.address }} {{ ansible_fqdn }} {{ ansible_hostname }}"

    - name: Lock ansible users passwd
      user:
        name=ansible
        state=present
        password_lock=yes
        
    - name: Ensure dns record is present
      ansible.builtin.assert:
        that:
          - dig != ""
          - dig != "NXDOMAIN"
      vars:
        dig: "{{ lookup('community.general.dig', inventory_hostname) }}"
